ifneq ($(__rules_inc),1)
__rules_inc=1

COMMA:=,
qstrip=$(strip $(subst ",,$(1)))

ARCH := arm
PLATFORM := sipl-p7
CPU := am335x
LINUX_VERSION := 4.6

GNU_TARGET_NAME := arm-linux-gnueabihf
TOOLCHAIN_DIR = $(STAGING_DIR)/$(GNU_TARGET_NAME)
TOOLCHAIN_LIB_DIR = $(STAGING_DIR)/$(GNU_TARGET_NAME)/$(GNU_TARGET_NAME)/lib
TOOLCHAIN_SOURCE = $(TARBALL_DIR)/$(GNU_TARGET_NAME).tar.xz
TOOLCHAIN_PREFIX := arm-linux-gnueabihf-

INCLUDE_DIR:=$(TOPDIR)/include
TARBALL_DIR:=$(TOPDIR)/tarball
BIN_DIR_BASE:=$(TOPDIR)/bin
BIN_DIR:=$(BIN_DIR_BASE)/$(call qstrip,$(PLATFORM))
BUILD_DIR_BASE:=$(TOPDIR)/build_dir
BUILD_DIR_HOST:=$(BUILD_DIR_BASE)/host
BUILD_DIR:=$(BUILD_DIR_BASE)/target-$(PLATFORM)
STAGING_DIR_BASE:=$(TOPDIR)/staging_dir
STAGING_DIR_HOST:=$(STAGING_DIR_BASE)/host
STAGING_DIR:=$(STAGING_DIR_BASE)/target-$(PLATFORM)
STAGING_ROOTFS_DIR:=$(STAGING_DIR)/rootfs
HOST_BIN_DIR:=$(STAGING_DIR_BASE)/host/bin
PACKAGE_DIR:=$(BIN_DIR)/packages
TARGET_DIR:=$(BUILD_DIR)/rootfs

TARGET_CROSS:= $(TOOLCHAIN_PREFIX)
TARGET_CC:= $(TARGET_CROSS)gcc
TARGET_CXX:= $(TARGET_CROSS)g++
TARGET_AR:=$(TARGET_CROSS)ar
TARGET_STRIP:=$(TARGET_CROSS)strip

TARGET_PATH:=$(PATH)$(if $(TOOLCHAIN_DIR),:$(TOOLCHAIN_DIR)/bin,)
TARGET_PATH:=$(TARGET_PATH):$(HOST_BIN_DIR)
TARGET_CFLAGS:=-Os -pipe -fno-caller-saves
TARGET_CXXFLAGS = $(TARGET_CFLAGS)
TARGET_ASFLAGS_DEFAULT = $(TARGET_CFLAGS)
TARGET_ASFLAGS = $(TARGET_ASFLAGS_DEFAULT)
TARGET_CPPFLAGS:=-I$(STAGING_DIR)/usr/include
TARGET_LDFLAGS:=-L$(STAGING_DIR)/usr/lib -L$(STAGING_DIR)/usr/lib/librouter
export PATH:=$(TARGET_PATH)

HOSTCC:=gcc
HOSTCXX:=g++
HOST_CPPFLAGS:=-I$(STAGING_DIR_HOST)/include
HOST_CFLAGS:=-O2 $(HOST_CPPFLAGS)
HOST_LDFLAGS:=-L$(STAGING_DIR_HOST)/lib

CP:=cp -fpR
LN:=ln -sf
XARGS:=xargs -r

INSTALL_BIN:=install -m0755
INSTALL_DIR:=install -d -m0755
INSTALL_DATA:=install -m0644
INSTALL_CONF:=install -m0600

TARGET_CONFIGURE_OPTS = \
  AR=$(TARGET_CROSS)ar \
  AS="$(TARGET_CC) -c $(TARGET_ASFLAGS)" \
  LD=$(TARGET_CROSS)ld \
  NM=$(TARGET_CROSS)nm \
  CC=$(TARGET_CC) \
  GCC=$(TARGET_CC) \
  CXX="$(TARGET_CXX)" \
  RANLIB=$(TARGET_CROSS)ranlib \
  STRIP=$(TARGET_CROSS)strip \
  OBJCOPY=$(TARGET_CROSS)objcopy \
  OBJDUMP=$(TARGET_CROSS)objdump \
  SIZE=$(TARGET_CROSS)size

MAKE_VARS = \
	CFLAGS="$(TARGET_CFLAGS) $(TARGET_CPPFLAGS)" \
	LDFLAGS="$(TARGET_LDFLAGS)"

MAKE_FLAGS = \
	$(TARGET_CONFIGURE_OPTS) \
	CROSS=$(TARGET_CROSS) \
	ARCH=$(ARCH)

STRIP:=$(TARGET_CROSS)strip
RSTRIP:= \
	export CROSS="$(TARGET_CROSS)" \
	NO_RENAME=1; \
	NM="$(TARGET_CROSS)nm" \
	STRIP="$(STRIP)" \
	STRIP_KMOD="$(INCLUDE_DIR)/strip-kmod.sh" \
	$(INCLUDE_DIR)/rstrip.sh

FORCE: ;
.PHONY: FORCE

endif #__rules_inc
